install.packages("explore")
library(tibble)
setwd("~/Documents/Doc-perso-2023/Job-Valeo/evops-project/extreme-value-operations")
install.packages("DataExplorer")
source("./src/generate_gev_sample.R")
source("./src/calculate_gev_inverse_cdf.R")
source("./src/estimate_gev_mixture_model_parameters.R")
source("./src/predict_gev_mixture_model_parameters.R")
source("./src/plot_gev_mixture_model_pdf.R")
source("./src/plot_gev_mixture_model_cdf.R")
source("./src/estimate_gev_mixture_model_quantile.R")
source("./src/estimate_gev_mixture_model_pdf.R")
source("./src/estimate_gev_mixture_model_cdf.R")
source("./src/estimate_gev_mixture_model_sample.R")
#'
library(readr)
library(tidyverse)
library(DataExplorer)
#'
weatherAUS <- xfun::in_dir(dir = path, expr = read_csv("./applications/weatherAUS.csv"))
#'
weatherAUS <- read_csv("./applications/weatherAUS.csv")
#'
final_data <- drop_columns(weatherAUS, c("RISK_MM", "Cloud9am", "Cloud3pm", "Evaporation", "Sunshine"))
plot_scatterplot(final_data[, c("MinTemp", "MaxTemp", "Rainfall",  "WindGustSpeed", "WindSpeed9am",  "WindSpeed3pm",  "Humidity9am",
"Humidity3pm",   "Pressure9am",   "Pressure3pm",   "Temp9am", "Temp3pm")],
by = "Rainfall",
sampled_rows = 3000L)
#'
final_data_clean <- na.omit(final_data)
summary(final_data_clean)
#'
x <- final_data_clean$Rainfall
n <- length(x)
n
#'
nlargest_1 <- 20000
x <- extract_nlargest_sample(x, n = nlargest_1)
n <- length(x)
n
# Histogram of all data
#+ fig.width=12, fig.height=8
hist(x, prob = TRUE)
lines(density(x),
lwd = 2,
col = 4)
# Autocorrelation function of all data
#+ fig.width=12, fig.height=8
acf(x)
# Histogram of the largest data
#'
nlargest <- 2000
y <- extract_nlargest_sample(x, n = nlargest)
hist(y, prob = TRUE)
lines(density(y),
lwd = 2,
col = 4)
# Autocorrelation function of the largest data
#+ fig.width=12, fig.height=8
acf(y)
# Estimation of gev mixture models
#'
gev_mixture_model <- estimate_gev_mixture_model_parameters(x = x,
block_sizes = NULL,
minimum_nblocks = 50,
threshold = NULL,
nlargest = nlargest,
confidence_level = 0.95,
use_extremal_index = TRUE,
use_lower_threshold = FALSE,
maximum_iterations = 1500,
log_mv = TRUE,
log_pw = TRUE,
trace = TRUE,
method = "MLE")
#'
gev_mixture_model$extremal_indexes
#'
gev_mixture_model$normalized_gev_parameters_object
#'
gev_mixture_model$full_normalized_gev_parameters_object
#'
gev_mixture_model$automatic_weights_pw_shape
#'
gev_mixture_model$automatic_weights_pw_scale
#'
gev_mixture_model$automatic_weights_pw_loc
max(gev_mixture_model$automatic_weights_pw_loc)
#'
gev_mixture_model$weighted_normalized_gev_parameters_object[3, ]
#'
gev_mixture_model$automatic_weights_mw
plot_gev_mixture_model_pdf(gev_mixture_model,
type = "automatic_weights",
model_wise = FALSE,
zoom = FALSE,
xlab = "Quantile",
ylab = "Density",
main = "Probability Density Function (PDF) Plot")
plot_gev_mixture_model_pdf(gev_mixture_model,
type = "automatic_weights",
model_wise = FALSE,
zoom = TRUE,
xlab = "Quantile",
ylab = "Density",
main = "Probability Density Function (PDF) Plot")
#+ fig.width=12, fig.height=16
par(mfrow = c(2, 1))
plot_gev_mixture_model_cdf(gev_mixture_model,
type = "automatic_weights",
model_wise = FALSE,
zoom = FALSE,
xlab = "Quantile",
ylab = "Cumulative Probability",
main = "Cumulative Distribution Function (CDF) Plot")
plot_gev_mixture_model_pdf(gev_mixture_model,
type = "automatic_weights",
model_wise = TRUE,
zoom = FALSE,
xlab = "Quantile",
ylab = "Density",
main = "Probability Density Function (PDF) Plot")
plot_gev_mixture_model_pdf(gev_mixture_model,
type = "automatic_weights",
model_wise = TRUE,
zoom = TRUE,
xlab = "Quantile",
ylab = "Density",
main = "Probability Density Function (PDF) Plot")
